{"version":3,"sources":["services/auth-service.js","components/Signup.jsx","components/Verification.jsx","components/Login.jsx","components/Home.jsx","components/Main.jsx","components/NotFound.jsx","App.jsx","serviceWorker.js","index.js"],"names":["authService","_this","this","Object","classCallCheck","validationCheck","firstname","lastname","number","service","post","then","response","data","signup","username","email","password","loggedin","get","login","logout","axios","create","baseURL","process","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","signed","setState","catch","error","objectSpread","message","handleChange","_event$target","target","name","value","defineProperty","AuthService","_this2","react_default","a","createElement","onSubmit","type","onChange","e","Component","Verification","checkSubmit","trim","toLowerCase","normalize","replace","verified","react_router","to","react_router_dom","Login","logged","console","log","Home","Main","NotFound","App","user","exact","path","component","render","Main_Main","Verification_Verification","val","Signup_Signup","Login_Login","React","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ec98f7b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default class authService {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: process.env.REACT_APP_URL,\n            withCredentials: true\n        })\n    }\n\n    validationCheck = (firstname, lastname, number) => {\n        return this.service.post(\"/verification\", {firstname, lastname, number})\n            .then(response => response.data)\n    }\n\n    signup = (username, email, password) => {\n        return this.service.post('/signup', { username, email, password })\n            .then(response => response.data)\n    }\n\n    loggedin = () => {\n        return this.service.get('/loggedin')\n            .then(response => response.data)\n    }\n\n    login = (username, password) => {\n        return this.service.post('/login', { username, password })\n            .then(response => response.data)\n    }\n\n    logout = () => {\n        return this.service.post('/logout', {})\n            .then(response => response.data)\n    }\n}","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth-service\";\nimport { Link } from 'react-router-dom';\n\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        username: this.props.name,\n        email: \"\",\n        password: \"\",\n        error: \"\"\n      }\n\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n\n    this.service.signup(username, email, password)\n    .then( response => {\n      this.props.signed(this.state.username)\n        this.setState({\n            username: \"\", \n            password: \"\",\n            email: \"\"\n        });\n    })\n    .catch( error => {\n        this.setState({ ...this.state, username: \"\", email: \"\", password: \"\", error: error.response.data.message})\n    })\n  }\n\n \n  handleChange = event => {\n    const { name, value } = event.target;\n \n    this.setState({ ...this.state, [name]: value } );\n    \n  };\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n        {(() => {\n          if (this.state.error !== \"\") {\n            return (<p>{this.state.error}</p>)}\n        })()}\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth-service\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default class Verification extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      number: \"\",\n      verified: false,\n      error: \"\"\n    };\n\n    this.service = new AuthService();\n  }\n\n  checkSubmit = (event) => {\n    event.preventDefault();\n    const firstname = this.state.firstname.trim().toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\")\n    const lastname = this.state.lastname.trim().toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\")\n    const number = this.state.number\n\n    this.service.validationCheck(firstname, lastname, number)\n    .then( response => {\n        this.setState({...this.state, verified: true}, () => this.props.verified(firstname));\n    })\n    .catch( error => {\n        this.setState({ ...this.state, firstname: \"\", lastname: \"\", number: \"\", error: error.response.data.message})\n    })\n  }\n \n  handleChange = event => {\n    const { name, value } = event.target;\n \n    this.setState({ ...this.state, [name]: value });\n    \n  };\n\n  render() {\n    if (this.state.verified) return <Redirect to=\"/signup\"/>\n    else {\n      return (\n        <div>\n        <form onSubmit={this.checkSubmit}>\n          <label>Firstname:</label>\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            value={this.state.firstname}\n            onChange={e => this.handleChange(e)}\n          />\n\n          <label>Lastname:</label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            value={this.state.lastname}\n            onChange={e => this.handleChange(e)}\n          />\n\n          <label>Número de Colegiado:</label>\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={e => this.handleChange(e)}\n          />\n\n          <input type=\"submit\" value=\"Check\" />\n        </form>\n        <p>\n          Already have account?\n          <Link to=\"/login\">Login</Link>\n        </p>\n        {(() => {\n          if (this.state.error !== \"\") {\n            return (<p>{this.state.error}</p>)}\n        })()}\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from \"../services/auth-service\";\nimport { Link, Redirect } from 'react-router-dom';\n\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { username: this.props.name, password: '', logged: false, error: '' };\n        this.service = new AuthService();\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const username = this.state.username;\n        const password = this.state.password;\n        this.service.login(username, password)\n             .then(response => {            \n                 this.setState({ username: \"\", password: \"\", logged: true }, () => this.props.logged(response));\n             })\n             .catch(error => {\n                console.log(error)\n                this.setState({ error: error.response.data.message});\n            })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n        // this.state.error = ''\n    }\n\n    render(){\n      return(\n        \n        <div>\n          <form onSubmit={this.handleFormSubmit}>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n            \n            <input type=\"submit\" value=\"Login\" />\n          </form>\n          <p>Don't have an account? \n              <Link to={\"/verification\"}> Signup</Link>\n          </p>\n          {(() => {\n          if (this.state.error !== \"\") {\n            return (<p>{this.state.error}</p>)}\n          })()}\n        </div>\n      )\n    }\n}","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\"\n\nexport default class Home extends Component {\n  render() {\n    return <h1>hola</h1>\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <div>\n        <h1>main</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h1>404</h1>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\n// Components\nimport Signup from \"./components/Signup\";\nimport Verification from \"./components/Verification\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\"\nimport Main from \"./components/Main\"\nimport NotFound from \"./components/NotFound\"\n// Routing & DOM\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// Service\nimport authService from \"./services/auth-service\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { logged: false, verified: false, signed: false, user: null, name: \"\" };\n    this.service = new authService();\n  }\n\n  logged(user){\n    this.setState({\n      ...this.state,\n      logged: true,\n      user: user\n    })\n  }\n\n  verified(name){\n    this.setState({\n      ...this.state,\n      verified: true,\n      name: name\n    })\n  }\n\n  signed(name){\n    this.setState({\n      ...this.state,\n      signed: true,\n      name: name\n    })\n  }\n\n  render() {    \n    return (\n      <div>\n        <Switch>\n          <Route exact path='/' component={Home} />\n\n          <Route exact path='/app' render={() =>\n            this.state.logged ? <Main /> :\n            <Redirect to={\"/login\"}/> } />\n\n          <Route exact path='/verification' render={() => \n            this.state.logged ? <Redirect to={\"/app\"}/> :\n            <Verification verified={val => this.verified(val)}/> } />\n\n          <Route exact path='/signup' render={() => \n            this.state.logged ? <Redirect to={\"/app\"}/> :\n            this.state.signed ? <Redirect to={\"/login\"}/> :\n            this.state.verified ? <Signup name={this.state.name} signed={name => this.signed(name)}/> :\n            <Redirect to={\"/verification\"}/> }/>\n\n          <Route exact path='/login' render={() => \n            this.state.logged ? <Redirect to={\"/app\"}/> :\n            <Login name={this.state.name} logged={user => this.logged(user)}/> } />\n\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}